{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/components/dropdown.js","webpack:///./src/components/navbar.js","webpack:///./src/components/searchbar.js","webpack:///./src/components/header.js","webpack:///./src/components/recentMeetings.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["SEO","_ref","description","lang","meta","keywords","title","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1315885718_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Dropdown","props","_this","_React$Component","call","this","state","expanded","handleBlur","bind","assertThisInitialized_default","handleFocus","setState","_this2","core_browser_esm","onMouseEnter","onMouseLeave","css","dropdown_ref3","gatsby_browser_entry","to","directoryNode","onFocus","onBlur","dropdown_ref4","replace","_ref5","allMarkdownRemark","edges","map","_ref6","node","shouldRender","key","id","dropdown_ref","fields","slug","_ref2","frontmatter","renderListItem","fileAbsolutePath","includes","split","pop","search","RegExp","React","Component","dropdown","_ref7","dropdown_Dropdown","_3658932624","Navbar","navbar_ref","navbar_ref2","href","index_es","icon","navbar_ref3","allDirectory","_ref4","navbar","navbar_Navbar","_2270474749","Searchbar","event","target","value","navigate","handleKeyPress","className","type","defaultValue","onKeyPress","placeholder","inputCSS","e","Header","searchVisible","toggleSearch","preventDefault","header_ref","style","margin","header_ref2","siteTitle","header_ref3","header_ref4","onClick","header_ref5","searchbar_Searchbar","header_ref7","RecentMeetings","ulStyle","liStyle","linkStyle","_789609738","styles","Sidebar","sidebar_ref","recentMeetings","library","add","faSearch","faBars","Layout","_ref3","children","react_default","Fragment","header","layout_ref","sidebar_Sidebar","layout_ref2","_755544856"],"mappings":"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","file":"1-2c69af9528c33c417e02.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription\n              },\n              {\n                property: `og:title`,\n                content: title\n              },\n              {\n                property: `og:description`,\n                content: metaDescription\n              },\n              {\n                property: `og:type`,\n                content: `website`\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n","import { StaticQuery, graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\n\nfunction renderListItem(node, shouldRender) {\n  if (shouldRender) {\n    return (\n      <li\n        key={node.id}\n        css={css`\n          @media (min-width: 600px) {\n            &:hover {\n              background-color: #41a62a;\n            }\n            line-height: 12px;\n          }\n          line-height: 6px;\n        `}\n      >\n        <Link\n          to={node.fields.slug}\n          css={css`\n            color: white;\n            text-decoration: none;\n            display: block;\n            padding: 12px 0.5rem;\n            font-size: 11px;\n            text-transform: uppercase;\n            @media (max-width: 600px) {\n              padding: 0.5rem 2rem;\n              text-align: left;\n              &:hover {\n                color: #24890d;\n              }\n            }\n          `}\n        >\n          {node.frontmatter.title}\n        </Link>\n      </li>\n    );\n  } else {\n    return null;\n  }\n}\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false\n    };\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  handleBlur() {\n    this.setState({ expanded: false });\n  }\n\n  handleFocus() {\n    this.setState({ expanded: true });\n  }\n\n  render() {\n    return (\n      <li\n        onMouseEnter={this.handleFocus}\n        onMouseLeave={this.handleBlur}\n        css={css`\n          float: left;\n          background-color: black;\n          @media (min-width: 600px) {\n            &:hover {\n              background-color: #24890d;\n            }\n            &:hover ul {\n              display: block;\n            }\n            margin-right: 1px;\n            line-height: 2.5rem;\n          }\n          @media (max-width: 600px) {\n            text-align: left;\n            width: 100%;\n            margin: 0;\n            line-height: 1rem;\n          }\n        `}\n      >\n        <Link\n          to={this.props.directoryNode.name}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          css={css`\n            text-decoration: none;\n            display: block;\n            color: white;\n            padding: 0 0.5rem;\n            text-transform: uppercase;\n            font-size: 11px;\n            &:focus + ul {\n              display: block;\n            }\n            @media (max-width: 600px) {\n              &:hover {\n                color: #24890d;\n              }\n            }\n          `}\n        >\n          {this.props.directoryNode.name.replace(/-/g, \" \")}\n        </Link>\n        <ul\n          css={css`\n            width: 10rem;\n            list-style: none;\n            padding: 0;\n            margin: 0;\n            background-color: #24890d;\n            position: absolute;\n            display: none;\n            @media (max-width: 600px) {\n              background-color: black;\n              position: static;\n              display: block;\n              text-align: center;\n              width: 100%;\n              padding: 10px 0;\n              margin: 0;\n              line-height: 1rem;\n            }\n          `}\n        >\n          {this.props.data.allMarkdownRemark.edges.map(({ node }) =>\n            renderListItem(\n              node,\n              //we don't want index.md files as dropdown list items\n              //we also only want files that are direct children of the directory\n              //or are index.md files of sub directories\n              !node.fileAbsolutePath.includes(\n                this.props.directoryNode.name + \"/index.md\"\n              ) &&\n                (node.fileAbsolutePath.includes(\n                  this.props.directoryNode.name +\n                    \"/\" +\n                    node.fileAbsolutePath.split(\"/\").pop()\n                ) ||\n                  node.fileAbsolutePath.search(\n                    new RegExp(\n                      \"/\" + this.props.directoryNode.name + \"/[^/]+/index.md\"\n                    )\n                  ) !== -1)\n            )\n          )}\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default ({ directoryNode }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___title] }) {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n              }\n              fields {\n                slug\n              }\n              fileAbsolutePath\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Dropdown directoryNode={directoryNode} data={data} />}\n  />\n);\n","import { StaticQuery, graphql } from \"gatsby\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\nimport Dropdown from \"./dropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav\n        css={css`\n          float: right;\n          margin: 0;\n          height: inherit;\n          @media (max-width: 600px) {\n            &:hover ul {\n              display: block;\n            }\n          }\n        `}\n      >\n        <a\n          css={css`\n            display: none;\n            width: 2.5rem;\n            height: 2.5rem;\n            text-align: center;\n            color: white;\n            line-height: 2.5rem;\n            @media (max-width: 600px) {\n              display: inline-block;\n            }\n            &:hover {\n              background-color: #939393;\n            }\n          `}\n          href=\"#\"\n        >\n          <FontAwesomeIcon icon=\"bars\" title=\"Menu\" />\n        </a>\n        <ul\n          css={css`\n            padding: 0 0;\n            list-style: none;\n            display: inline;\n            @media (max-width: 600px) {\n              display: none;\n              position: absolute;\n              padding: 1px;\n              background: #000;\n              right: 0px;\n              top: 1.5rem;\n              width: 100%;\n            }\n          `}\n        >\n          {this.props.data.allDirectory.edges.map(({ node }) => (\n            <Dropdown directoryNode={node} key={node.id} />\n          ))}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allDirectory(\n          filter: {\n            sourceInstanceName: { eq: \"content\" }\n            relativePath: { regex: \"/^[^/]+$/\" }\n            name: { regex: \"/^[^/_]/\" }\n          }\n          sort: { order: ASC, fields: [name] }\n        ) {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Navbar data={data} />}\n  />\n);\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\n\nexport default class Searchbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\"\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  render() {\n    return (\n      <label>\n        <span className=\"screen-reader-text\">Search: </span>\n        <input\n          title=\"Search\"\n          type=\"text\"\n          defaultValue={this.state.query}\n          onKeyPress={this.handleKeyPress}\n          placeholder=\"Search...\"\n          css={this.props.inputCSS}\n        />\n      </label>\n    );\n  }\n\n  handleKeyPress(e) {\n    if (e.key === \"Enter\") {\n      this.search(e);\n    }\n  }\n\n  search = event => {\n    const query = event.target.value;\n    this.setState({ query: query });\n    navigate(\"/search?query=\" + query);\n  };\n}\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\nimport Navbar from \"./navbar\";\nimport Searchbar from \"./searchbar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchVisible: false\n    };\n    this.toggleSearch = this.toggleSearch.bind(this);\n  }\n\n  toggleSearch(e) {\n    e.preventDefault();\n    this.setState({\n      searchVisible: !this.state.searchVisible\n    });\n  }\n\n  render() {\n    return (\n      <header\n        css={css`\n          background: black;\n          display: inline-block;\n          width: 100%;\n          position: fixed;\n          z-index: 5;\n          height: 2.5rem;\n          @media only screen and (max-width: 600px) {\n            position: absolute;\n          }\n        `}\n      >\n        <h1 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            css={css`\n              margin: 0 1rem;\n              color: white;\n              float: left;\n              text-decoration: none;\n            `}\n          >\n            {this.props.siteTitle}\n          </Link>\n        </h1>\n        <div\n          css={css`\n            background-color: #24890d;\n            float: right;\n            &:hover {\n              background-color: #41a62a;\n            }\n            @media only screen and (max-width: 600px) {\n              margin-right: 0;\n            }\n          `}\n        >\n          <a\n            css={css`\n              display: inline-block;\n              text-align: center;\n              color: white;\n              line-height: 2.5rem;\n              width: 2.5rem;\n            `}\n            href=\"#search-toggle\"\n            onClick={this.toggleSearch}\n          >\n            <FontAwesomeIcon icon=\"search\" title=\"Search\" />\n          </a>\n        </div>\n        <Navbar />\n\n        {this.state.searchVisible ? (\n          <div\n            css={css`\n              position: absolute;\n              top: 2.5em;\n              left: 185px;\n              right: 0;\n              background-color: #41a62a;\n              @media only screen and (max-width: 600px) {\n                left: 0;\n              }\n            `}\n          >\n            <div\n              css={css`\n                @media only screen and (min-width: 600px) {\n                  float: right;\n                }\n                padding: 0.5rem 1rem;\n              `}\n            >\n              <Searchbar\n                inputCSS={css`\n                  width: 350px;\n                  @media only screen and (max-width: 600px) {\n                    width: 100%;\n                  }\n                `}\n              />\n            </div>\n          </div>\n        ) : null}\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import { StaticQuery, graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { linkStyle, liStyle, ulStyle } from \"./sidebar\";\n\nconst RecentMeetings = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: {\n            fileAbsolutePath: {\n              regex: \"/(collaboration)/(communication)/(monthly-meetings)/((?!index).)*[.]md$/\"\n            }\n          }\n          limit: 5\n        ) {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                date(formatString: \"Do MMMM YYYY\")\n              }\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <h5>Recent Meetings</h5>\n        <ul\n          css={css`\n            ${ulStyle}\n          `}\n        >\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <li\n              key={node.id}\n              css={css`\n                ${liStyle}\n              `}\n            >\n              <Link\n                css={css`\n                  ${linkStyle}\n                `}\n                to={node.fields.slug}\n              >\n                {node.frontmatter.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n  />\n);\n\nexport default RecentMeetings;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { css } from \"@emotion/core\";\nimport RecentMeetings from \"./recentMeetings\";\nimport Searchbar from \"./searchbar\";\n\nexport const linkStyle = css`\n  text-decoration: none;\n  color: white;\n  &:hover {\n    color: green;\n  }\n`;\n\nexport const liStyle = css`\n  margin-bottom: 5px;\n`;\n\nexport const ulStyle = css`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  font-size: 11px;\n`;\n\nexport const Sidebar = () => (\n  <div\n    css={css`\n      background-color: black;\n      color: white;\n      width: 175px;\n      float: left;\n      margin-top: 2rem;\n      margin-bottom: -100%;\n      min-height: 100vh;\n      position: fixed;\n      z-index: 3;\n      padding-left: 10px;\n      @media only screen and (max-width: 600px) {\n        display: none;\n      }\n    `}\n  >\n    <h5>Search</h5>\n    <Searchbar />\n    <RecentMeetings />\n    <h5>Links</h5>\n    <ul\n      css={css`\n        ${ulStyle}\n      `}\n    >\n      <li\n        css={css`\n          ${liStyle}\n        `}\n      >\n        <a\n          css={css`\n            ${linkStyle}\n          `}\n          href=\"http://groups.google.com/group/icatgroup\"\n        >\n          icatgroup\n        </a>\n      </li>\n      <li\n        css={css`\n          ${liStyle}\n        `}\n      >\n        <a\n          css={css`\n            ${linkStyle}\n          `}\n          href=\"https://repo.icatproject.org/\"\n        >\n          repo.icatproject.org\n        </a>\n      </li>\n      <li\n        css={css`\n          ${liStyle}\n        `}\n      >\n        <Link\n          to=\"/useful-links\"\n          css={css`\n            ${linkStyle}\n          `}\n        >\n          Useful Links\n        </Link>\n      </li>\n      <li\n        css={css`\n          ${liStyle}\n        `}\n      >\n        <a\n          css={css`\n            ${linkStyle}\n          `}\n          href=\"https://waffle.io/icatproject/icat.server\"\n        >\n          Waffle.io dashboard\n        </a>\n      </li>\n      <li\n        css={css`\n          ${liStyle}\n        `}\n      >\n        <a\n          css={css`\n            ${linkStyle}\n          `}\n          href=\"https://github.com/icatproject\"\n        >\n          Github for icatproject\n        </a>\n      </li>\n      <li\n        css={css`\n          ${liStyle}\n        `}\n      >\n        <a\n          css={css`\n            ${linkStyle}\n          `}\n          href=\"https://github.com/icatproject-contrib\"\n        >\n          Github for icatproject-contrib\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { css } from \"@emotion/core\";\nimport Header from \"./header\";\nimport { Sidebar } from \"./sidebar\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSearch, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./layout.css\";\n\nlibrary.add(faSearch);\nlibrary.add(faBars);\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          css={css`\n            margin: 0;\n          `}\n        >\n          <Sidebar />\n          <div\n            css={css`\n              margin-top: 70px;\n              margin-left: 300px;\n              margin-bottom: 1.5em;\n              margin-right: 100px;\n              float: left;\n              @media only screen and (max-width: 600px) {\n                margin-right: 10px;\n                margin-left: 10px;\n              }\n            `}\n          >\n            {children}\n          </div>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}