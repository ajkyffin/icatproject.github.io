{"version":3,"sources":["webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/split-on-first/index.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./src/pages/search.jsx","webpack:///./node_modules/query-string/node_modules/strict-uri-encode/index.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/elasticlunr/elasticlunr.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js"],"names":["singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","string","separator","separatorIndex","indexOf","iter","Symbol","iterator","from","arrayLikeToArray","arr","isArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","SearchPage","props","state","query","results","componentDidMount","location","this","queryString","parse","search","setState","getDerivedStateFromProps","nextProps","prevState","getOrCreateIndex","data","index","Index","load","siteSearchIndex","expand","map","ref","documentStore","getDoc","render","title","keywords","page","slug","css","to","excerpt","React","Component","str","encodeURIComponent","x","charCodeAt","toString","toUpperCase","arrayWithoutHoles","iterableToArray","nonIterableSpread","len","arr2","o","minLen","n","constructor","name","test","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","pipeline","add","trimmer","stopWordFilter","stemmer","version","lunr","utils","warn","message","console","obj","EventEmitter","events","addListener","args","arguments","fn","pop","names","forEach","hasHandler","push","removeListener","fnIndex","splice","emit","apply","undefined","tokenizer","filter","token","t","toLowerCase","out","item","seperator","trim","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","serialised","fnName","Error","fns","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","j","reset","get","toJSON","_fields","_ref","DocumentStore","eventEmitter","_idfCache","on","bind","off","serialisedData","field","fields","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","hasOwnProperty","df","getDocFreq","log","getFields","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","score","sort","a","b","booleanType","bool","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","indexJson","use","plugin","unshift","_save","docInfo","store","copy","attr","clone","updateFieldLength","c","w","stem","suffix","firstch","re","re2","re3","re4","substr","fp","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","root","tokenInfo","hasToken","node","getNode","memo","buildUserConfig","error","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","set","element","locationFor","toArray","ctx","elem","start","end","sectionLength","pivot","floor","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements","_slicedToArray","_toConsumableArray","_createForOfIteratorHelper","allowArrayLike","it","_arrayLikeToArray","_unsupportedIterableToArray","F","s","done","value","e","_e","f","normalCompletion","didErr","step","next","_e2","return","strictUriEncode","decodeComponent","splitOnFirst","validateArrayFormatSeparator","encode","options","strict","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","Number","isNaN","parseBooleans","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","newValue","parserForArrayFormat","ret","create","_step","_iterator","param","_splitOnFirst","_splitOnFirst2","_key","_value","includes","_i","_Object$keys","_i2","_Object$keys2","k","reduce","Boolean","keysSorter","object","shouldFilter","skipNull","skipEmptyString","encoderForArrayFormat","objectCopy","_i3","_Object$keys3","parseUrl","_splitOnFirst3","_splitOnFirst4","url","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","_arr","_n","_d","_s"],"mappings":"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","file":"component---src-pages-search-jsx-d363f62a61d7ebb2b48a.js","sourcesContent":["'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","'use strict';\n\nmodule.exports = function (string, separator) {\n  if (!(typeof string === 'string' && typeof separator === 'string')) {\n    throw new TypeError('Expected the arguments to be of type `string`');\n  }\n\n  if (separator === '') {\n    return [string];\n  }\n\n  var separatorIndex = string.indexOf(separator);\n\n  if (separatorIndex === -1) {\n    return [string];\n  }\n\n  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];\n};","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { css } from '@emotion/core';\nimport { Index } from 'elasticlunr';\nimport queryString from 'query-string';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nexport default class SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      results: [],\n    };\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const qs = queryString.parse(location.search);\n    const { query } = qs;\n    const results = this.search(query);\n    this.setState({\n      query,\n      results,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.location.search !== prevState.query) {\n      const qs = queryString.parse(nextProps.location.search);\n      const { query } = qs;\n      return { query };\n    }\n    return null;\n  }\n\n  getOrCreateIndex() {\n    const { data } = this.props;\n    return this.index\n      ? this.index\n      : // Create an elastic lunr index and hydrate with graphql query results\n        Index.load(data.siteSearchIndex.index);\n  }\n\n  search(query) {\n    this.index = this.getOrCreateIndex();\n    const results = this.index\n      // Query the index with search string to get an [] of IDs\n      .search(query, { expand: true })\n      // Map over each ID and return the full document\n      .map(({ ref }) => this.index.documentStore.getDoc(ref));\n\n    return results;\n  }\n\n  render() {\n    const { query, results } = this.state;\n    return (\n      <Layout>\n        <SEO title=\"Search\" keywords={[`search`, `ICAT`]} />\n        <h1>{`Search Results for: ${query}`}</h1>\n        {results.map((page) => (\n          <article key={page.slug}>\n            <h2>\n              <Link\n                css={css`\n                  color: green;\n                `}\n                to={page.slug}\n              >\n                {page.title}\n              </Link>\n            </h2>\n            <p>\n              {page.excerpt}{' '}\n              <Link\n                css={css`\n                  color: green;\n                `}\n                to={page.slug}\n              >\n                Continue reading →\n              </Link>\n            </p>\n          </article>\n        ))}\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query SearchIndexQuery {\n    siteSearchIndex {\n      index\n    }\n  }\n`;\n\nSearchPage.propTypes = {\n  data: PropTypes.shape({\n    siteSearchIndex: PropTypes.shape({\n      index: PropTypes.shape({ documentStore: PropTypes.shape({}).isRequired }).isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n(function () {\n  /*!\n   * elasticlunr.js\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * Convenience function for instantiating a new elasticlunr index and configuring it\n   * with the default pipeline functions and the passed config function.\n   *\n   * When using this convenience function a new index will be created with the\n   * following functions already in the pipeline:\n   * \n   * 1. elasticlunr.trimmer - trim non-word character\n   * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n   * index\n   * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n   *\n   *\n   * Example:\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.addField('id');\n   *       this.addField('title');\n   *       this.addField('body');\n   *       \n   *       //this.setRef('id'); // default ref is 'id'\n   *\n   *       this.pipeline.add(function () {\n   *         // some custom pipeline function\n   *       });\n   *     });\n   * \n   *    idx.addDoc({\n   *      id: 1, \n   *      title: 'Oracle released database 12g',\n   *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n   *    });\n   * \n   *    idx.addDoc({\n   *      id: 2, \n   *      title: 'Oracle released annual profit report',\n   *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n   *    });\n   * \n   *    # simple search\n   *    idx.search('oracle database');\n   * \n   *    # search with query-time boosting\n   *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   *\n   * @param {Function} config A function that will be called with the new instance\n   * of the elasticlunr.Index as both its context and first parameter. It can be used to\n   * customize the instance of new elasticlunr.Index.\n   * @namespace\n   * @module\n   * @return {elasticlunr.Index}\n   *\n   */\n  var elasticlunr = function elasticlunr(config) {\n    var idx = new elasticlunr.Index();\n    idx.pipeline.add(elasticlunr.trimmer, elasticlunr.stopWordFilter, elasticlunr.stemmer);\n    if (config) config.call(idx, idx);\n    return idx;\n  };\n\n  elasticlunr.version = \"0.9.5\"; // only used this to make elasticlunr.js compatible with lunr-languages\n  // this is a trick to define a global alias of elasticlunr\n\n  lunr = elasticlunr;\n  /*!\n   * elasticlunr.utils\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A namespace containing utils for the rest of the elasticlunr library\n   */\n\n  elasticlunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf Utils\n   */\n\n  elasticlunr.utils.warn = function (global) {\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n  }(this);\n  /**\n   * Convert an object to string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * an empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {object} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf Utils\n   */\n\n\n  elasticlunr.utils.toString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    }\n\n    return obj.toString();\n  };\n  /*!\n   * elasticlunr.EventEmitter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n   * It manages adding and removing event handlers and triggering events and their handlers.\n   *\n   * Each event could has multiple corresponding functions,\n   * these functions will be called as the sequence that they are added into the event.\n   * \n   * @constructor\n   */\n\n\n  elasticlunr.EventEmitter = function () {\n    this.events = {};\n  };\n  /**\n   * Binds a handler function to a specific event(s).\n   *\n   * Can bind a single function to many different events in one call.\n   *\n   * @param {String} [eventName] The name(s) of events to bind this function to.\n   * @param {Function} fn The function to call when an event is fired.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.addListener = function () {\n    var args = Array.prototype.slice.call(arguments),\n        fn = args.pop(),\n        names = args;\n    if (typeof fn !== \"function\") throw new TypeError(\"last argument must be a function\");\n    names.forEach(function (name) {\n      if (!this.hasHandler(name)) this.events[name] = [];\n      this.events[name].push(fn);\n    }, this);\n  };\n  /**\n   * Removes a handler function from a specific event.\n   *\n   * @param {String} eventName The name of the event to remove this function from.\n   * @param {Function} fn The function to remove from an event.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n    if (!this.hasHandler(name)) return;\n    var fnIndex = this.events[name].indexOf(fn);\n    if (fnIndex === -1) return;\n    this.events[name].splice(fnIndex, 1);\n    if (this.events[name].length == 0) delete this.events[name];\n  };\n  /**\n   * Call all functions that bounded to the given event.\n   *\n   * Additional data can be passed to the event handler as arguments to `emit`\n   * after the event name.\n   *\n   * @param {String} eventName The name of the event to emit.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.emit = function (name) {\n    if (!this.hasHandler(name)) return;\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.events[name].forEach(function (fn) {\n      fn.apply(undefined, args);\n    }, this);\n  };\n  /**\n   * Checks whether a handler has ever been stored against an event.\n   *\n   * @param {String} eventName The name of the event to check.\n   * @private\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n    return name in this.events;\n  };\n  /*!\n   * elasticlunr.tokenizer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A function for splitting a string into tokens.\n   * Currently English is supported as default.\n   * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n   * the value of this property to set how you want strings are split into tokens.\n   * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n   * text process, then you'd better not change it.\n   *\n   * @module\n   * @param {String} str The string that you want to tokenize.\n   * @see elasticlunr.tokenizer.seperator\n   * @return {Array}\n   */\n\n\n  elasticlunr.tokenizer = function (str) {\n    if (!arguments.length || str === null || str === undefined) return [];\n\n    if (Array.isArray(str)) {\n      var arr = str.filter(function (token) {\n        if (token === null || token === undefined) {\n          return false;\n        }\n\n        return true;\n      });\n      arr = arr.map(function (t) {\n        return elasticlunr.utils.toString(t).toLowerCase();\n      });\n      var out = [];\n      arr.forEach(function (item) {\n        var tokens = item.split(elasticlunr.tokenizer.seperator);\n        out = out.concat(tokens);\n      }, this);\n      return out;\n    }\n\n    return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n  };\n  /**\n   * Default string seperator.\n   */\n\n\n  elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n  /**\n   * The sperator used to split a string into tokens. Override this property to change the behaviour of\n   * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see elasticlunr.tokenizer\n   */\n\n  elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  /**\n   * Set up customized string seperator\n   *\n   * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n   */\n\n  elasticlunr.tokenizer.setSeperator = function (sep) {\n    if (sep !== null && sep !== undefined && typeof sep === 'object') {\n      elasticlunr.tokenizer.seperator = sep;\n    }\n  };\n  /**\n   * Reset string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.resetSeperator = function () {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  };\n  /**\n   * Get string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.getSeperator = function () {\n    return elasticlunr.tokenizer.seperator;\n  };\n  /*!\n   * elasticlunr.Pipeline\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n   * both documents tokens and query tokens.\n   *\n   * An instance of elasticlunr.Index will contain a pipeline\n   * with a trimmer, a stop word filter, an English stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline, it will call each function in turn.\n   *\n   * The output of the functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Pipeline = function () {\n    this._queue = [];\n  };\n\n  elasticlunr.Pipeline.registeredFunctions = {};\n  /**\n   * Register a function in the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {Function} fn The function to register.\n   * @param {String} label The label to register this function with\n   * @memberOf Pipeline\n   */\n\n  elasticlunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions) {\n      elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    elasticlunr.Pipeline.registeredFunctions[label] = fn;\n  };\n  /**\n   * Get a registered function in the pipeline.\n   *\n   * @param {String} label The label of registered function.\n   * @return {Function}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.getRegisteredFunction = function (label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions !== true) {\n      return null;\n    }\n\n    return elasticlunr.Pipeline.registeredFunctions[label];\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {Function} fn The function to check for.\n   * @private\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised The serialised pipeline to load.\n   * @return {elasticlunr.Pipeline}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.load = function (serialised) {\n    var pipeline = new elasticlunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load un-registered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {Function} functions Any number of functions to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._queue.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos + 1, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {Function} fn The function to remove from the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._queue.indexOf(fn);\n\n    if (pos === -1) {\n      return;\n    }\n\n    this._queue.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that registered in the pipeline against the\n   * input tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.run = function (tokens) {\n    var out = [],\n        tokenLength = tokens.length,\n        pipelineLength = this._queue.length;\n\n    for (var i = 0; i < tokenLength; i++) {\n      var token = tokens[i];\n\n      for (var j = 0; j < pipelineLength; j++) {\n        token = this._queue[j](token, i, tokens);\n        if (token === void 0 || token === null) break;\n      }\n\n      ;\n      if (token !== void 0 && token !== null) out.push(token);\n    }\n\n    ;\n    return out;\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.reset = function () {\n    this._queue = [];\n  };\n  /**\n   * Get the pipeline if user want to check the pipeline.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.get = function () {\n    return this._queue;\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   * Only serialize pipeline function's name. Not storing function, so when\n   * loading the archived JSON index file, corresponding pipeline function is \n   * added by registered function of elasticlunr.Pipeline.registeredFunctions\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.toJSON = function () {\n    return this._queue.map(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * elasticlunr.Index\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Index is object that manages a search index.  It contains the indexes\n   * and stores all the tokens and document lookups.  It also provides the main\n   * user facing API for the library.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Index = function () {\n    this._fields = [];\n    this._ref = 'id';\n    this.pipeline = new elasticlunr.Pipeline();\n    this.documentStore = new elasticlunr.DocumentStore();\n    this.index = {};\n    this.eventEmitter = new elasticlunr.EventEmitter();\n    this._idfCache = {};\n    this.on('add', 'remove', 'update', function () {\n      this._idfCache = {};\n    }.bind(this));\n  };\n  /**\n   * Bind a handler to events being emitted by the index.\n   *\n   * The handler can be bound to many events at the same time.\n   *\n   * @param {String} [eventName] The name(s) of events to bind the function to.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.on = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n  };\n  /**\n   * Removes a handler from an event being emitted by the index.\n   *\n   * @param {String} eventName The name of events to remove the function from.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.off = function (name, fn) {\n    return this.eventEmitter.removeListener(name, fn);\n  };\n  /**\n   * Loads a previously serialised index.\n   *\n   * Issues a warning if the index being imported was serialised\n   * by a different version of elasticlunr.\n   *\n   * @param {Object} serialisedData The serialised set to load.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.load = function (serialisedData) {\n    if (serialisedData.version !== elasticlunr.version) {\n      elasticlunr.utils.warn('version mismatch: current ' + elasticlunr.version + ' importing ' + serialisedData.version);\n    }\n\n    var idx = new this();\n    idx._fields = serialisedData.fields;\n    idx._ref = serialisedData.ref;\n    idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n    idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n    idx.index = {};\n\n    for (var field in serialisedData.index) {\n      idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n    }\n\n    return idx;\n  };\n  /**\n   * Adds a field to the list of fields that will be searchable within documents in the index.\n   *\n   * Remember that inner index is build based on field, which means each field has one inverted index.\n   *\n   * Fields should be added before any documents are added to the index, fields\n   * that are added after documents are added to the index will only apply to new\n   * documents added to the index.\n   *\n   * @param {String} fieldName The name of the field within the document that should be indexed\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addField = function (fieldName) {\n    this._fields.push(fieldName);\n\n    this.index[fieldName] = new elasticlunr.InvertedIndex();\n    return this;\n  };\n  /**\n   * Sets the property used to uniquely identify documents added to the index,\n   * by default this property is 'id'.\n   *\n   * This should only be changed before adding documents to the index, changing\n   * the ref property without resetting the index can lead to unexpected results.\n   *\n   * @param {String} refName The property to use to uniquely identify the\n   * documents in the index.\n   * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.setRef = function (refName) {\n    this._ref = refName;\n    return this;\n  };\n  /**\n   *\n   * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n   *\n   * Defaultly save all the original JSON documents.\n   *\n   * @param {Boolean} save Whether to save the original JSON documents.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.saveDocument = function (save) {\n    this.documentStore = new elasticlunr.DocumentStore(save);\n    return this;\n  };\n  /**\n   * Add a JSON format document to the index.\n   *\n   * This is the way new documents enter the index, this function will run the\n   * fields from the document through the index's pipeline and then add it to\n   * the index, it will then show up in search results.\n   *\n   * An 'add' event is emitted with the document that has been added and the index\n   * the document has been added to. This event can be silenced by passing false\n   * as the second argument to add.\n   *\n   * @param {Object} doc The JSON format document to add to the index.\n   * @param {Boolean} emitEvent Whether or not to emit events, default true.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    this.documentStore.addDoc(docRef, doc);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n      var tokenCount = {};\n      fieldTokens.forEach(function (token) {\n        if (token in tokenCount) tokenCount[token] += 1;else tokenCount[token] = 1;\n      }, this);\n\n      for (var token in tokenCount) {\n        var termFrequency = tokenCount[token];\n        termFrequency = Math.sqrt(termFrequency);\n        this.index[field].addToken(token, {\n          ref: docRef,\n          tf: termFrequency\n        });\n      }\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('add', doc, this);\n  };\n  /**\n   * Removes a document from the index by doc ref.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n   *\n   * @param {String|Integer} docRef The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n    if (!docRef) return;\n\n    if (this.documentStore.isDocStored() === false) {\n      return;\n    }\n\n    if (!this.documentStore.hasDoc(docRef)) return;\n    var doc = this.documentStore.getDoc(docRef);\n    this.removeDoc(doc, false);\n  };\n  /**\n   * Removes a document from the index.\n   * This remove operation could work even the original doc is not store in the DocumentStore.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   *\n   * @param {Object} doc The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    if (!this.documentStore.hasDoc(docRef)) return;\n    this.documentStore.removeDoc(docRef);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      fieldTokens.forEach(function (token) {\n        this.index[field].removeToken(token, docRef);\n      }, this);\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n  };\n  /**\n   * Updates a document in the index.\n   *\n   * When a document contained within the index gets updated, fields changed,\n   * added or removed, to make sure it correctly matched against search queries,\n   * it should be updated in the index.\n   *\n   * This method is just a wrapper around `remove` and `add`\n   *\n   * An 'update' event is emitted with the document that has been updated and the index.\n   * This event can be silenced by passing false as the second argument to update. Only\n   * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n   * are silenced.\n   *\n   * @param {Object} doc The document to update in the index.\n   * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n   * @see Index.prototype.remove\n   * @see Index.prototype.add\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    this.removeDocByRef(doc[this._ref], false);\n    this.addDoc(doc, false);\n    if (emitEvent) this.eventEmitter.emit('update', doc, this);\n  };\n  /**\n   * Calculates the inverse document frequency for a token within the index of a field.\n   *\n   * @param {String} token The token to calculate the idf of.\n   * @param {String} field The field to compute idf.\n   * @see Index.prototype.idf\n   * @private\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.idf = function (term, field) {\n    var cacheKey = \"@\" + field + '/' + term;\n    if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n    var df = this.index[field].getDocFreq(term);\n    var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n    this._idfCache[cacheKey] = idf;\n    return idf;\n  };\n  /**\n   * get fields of current index instance\n   *\n   * @return {Array}\n   */\n\n\n  elasticlunr.Index.prototype.getFields = function () {\n    return this._fields.slice();\n  };\n  /**\n   * Searches the index using the passed query.\n   * Queries should be a string, multiple words are allowed.\n   *\n   * If config is null, will search all fields defaultly, and lead to OR based query.\n   * If config is specified, will search specified with query time boosting.\n   *\n   * All query tokens are passed through the same pipeline that document tokens\n   * are passed through, so any language processing involved will be run on every\n   * query term.\n   *\n   * Each query term is expanded, so that the term 'he' might be expanded to\n   * 'hello' and 'help' if those terms were already included in the index.\n   *\n   * Matching documents are returned as an array of objects, each object contains\n   * the matching document ref, as set for this index, and the similarity score\n   * for this document against the query.\n   *\n   * @param {String} query The query to search the index with.\n   * @param {JSON} userConfig The user query config, JSON format.\n   * @return {Object}\n   * @see Index.prototype.idf\n   * @see Index.prototype.documentVector\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.search = function (query, userConfig) {\n    if (!query) return [];\n    var configStr = null;\n\n    if (userConfig != null) {\n      configStr = JSON.stringify(userConfig);\n    }\n\n    var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n    var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n    var queryResults = {};\n\n    for (var field in config) {\n      var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n      var fieldBoost = config[field].boost;\n\n      for (var docRef in fieldSearchResults) {\n        fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n      }\n\n      for (var docRef in fieldSearchResults) {\n        if (docRef in queryResults) {\n          queryResults[docRef] += fieldSearchResults[docRef];\n        } else {\n          queryResults[docRef] = fieldSearchResults[docRef];\n        }\n      }\n    }\n\n    var results = [];\n\n    for (var docRef in queryResults) {\n      results.push({\n        ref: docRef,\n        score: queryResults[docRef]\n      });\n    }\n\n    results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    return results;\n  };\n  /**\n   * search queryTokens in specified field.\n   *\n   * @param {Array} queryTokens The query tokens to query in this field.\n   * @param {String} field Field to query in.\n   * @param {elasticlunr.Configuration} config The user query config, JSON format.\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n    var booleanType = config[fieldName].bool;\n    var expand = config[fieldName].expand;\n    var boost = config[fieldName].boost;\n    var scores = null;\n    var docTokens = {}; // Do nothing if the boost is 0\n\n    if (boost === 0) {\n      return;\n    }\n\n    queryTokens.forEach(function (token) {\n      var tokens = [token];\n\n      if (expand == true) {\n        tokens = this.index[fieldName].expandToken(token);\n      } // Consider every query token in turn. If expanded, each query token\n      // corresponds to a set of tokens, which is all tokens in the \n      // index matching the pattern queryToken* .\n      // For the set of tokens corresponding to a query token, find and score\n      // all matching documents. Store those scores in queryTokenScores, \n      // keyed by docRef.\n      // Then, depending on the value of booleanType, combine the scores\n      // for this query token with previous scores.  If booleanType is OR,\n      // then merge the scores by summing into the accumulated total, adding\n      // new document scores are required (effectively a union operator). \n      // If booleanType is AND, accumulate scores only if the document \n      // has previously been scored by another query token (an intersection\n      // operation0. \n      // Furthermore, since when booleanType is AND, additional \n      // query tokens can't add new documents to the result set, use the\n      // current document set to limit the processing of each new query \n      // token for efficiency (i.e., incremental intersection).\n\n\n      var queryTokenScores = {};\n      tokens.forEach(function (key) {\n        var docs = this.index[fieldName].getDocs(key);\n        var idf = this.idf(key, fieldName);\n\n        if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n\n          for (var docRef in scores) {\n            if (docRef in docs) {\n              filteredDocs[docRef] = docs[docRef];\n            }\n          }\n\n          docs = filteredDocs;\n        } // only record appeared token for retrieved documents for the\n        // original token, not for expaned token.\n        // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n        // query token appear in that document.\n        // so expanded token should not be added into docTokens, if added, this will pollute the\n        // coordNorm\n\n\n        if (key == token) {\n          this.fieldSearchStats(docTokens, key, docs);\n        }\n\n        for (var docRef in docs) {\n          var tf = this.index[fieldName].getTermFrequency(key, docRef);\n          var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n          var fieldLengthNorm = 1;\n\n          if (fieldLength != 0) {\n            fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n          }\n\n          var penality = 1;\n\n          if (key != token) {\n            // currently I'm not sure if this penality is enough,\n            // need to do verification\n            penality = (1 - (key.length - token.length) / key.length) * 0.15;\n          }\n\n          var score = tf * idf * fieldLengthNorm * penality;\n\n          if (docRef in queryTokenScores) {\n            queryTokenScores[docRef] += score;\n          } else {\n            queryTokenScores[docRef] = score;\n          }\n        }\n      }, this);\n      scores = this.mergeScores(scores, queryTokenScores, booleanType);\n    }, this);\n    scores = this.coordNorm(scores, docTokens, queryTokens.length);\n    return scores;\n  };\n  /**\n   * Merge the scores from one set of tokens into an accumulated score table.\n   * Exact operation depends on the op parameter. If op is 'AND', then only the\n   * intersection of the two score lists is retained. Otherwise, the union of\n   * the two score lists is returned. For internal use only.\n   *\n   * @param {Object} bool accumulated scores. Should be null on first call.\n   * @param {String} scores new scores to merge into accumScores.\n   * @param {Object} op merge operation (should be 'AND' or 'OR').\n   *\n   */\n\n\n  elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n      return scores;\n    }\n\n    if (op == 'AND') {\n      var intersection = {};\n\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          intersection[docRef] = accumScores[docRef] + scores[docRef];\n        }\n      }\n\n      return intersection;\n    } else {\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          accumScores[docRef] += scores[docRef];\n        } else {\n          accumScores[docRef] = scores[docRef];\n        }\n      }\n\n      return accumScores;\n    }\n  };\n  /**\n   * Record the occuring query token of retrieved doc specified by doc field.\n   * Only for inner user.\n   *\n   * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n   * @param {String} token query token\n   * @param {Object} docs the retrieved documents of the query token\n   *\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n    for (var doc in docs) {\n      if (doc in docTokens) {\n        docTokens[doc].push(token);\n      } else {\n        docTokens[doc] = [token];\n      }\n    }\n  };\n  /**\n   * coord norm the score of a doc.\n   * if a doc contain more query tokens, then the score will larger than the doc\n   * contains less query tokens.\n   *\n   * only for inner use.\n   *\n   * @param {Object} results first results\n   * @param {Object} docs field search results of a token\n   * @param {Integer} n query token number\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n    for (var doc in scores) {\n      if (!(doc in docTokens)) continue;\n      var tokens = docTokens[doc].length;\n      scores[doc] = scores[doc] * tokens / n;\n    }\n\n    return scores;\n  };\n  /**\n   * Returns a representation of the index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.toJSON = function () {\n    var indexJson = {};\n\n    this._fields.forEach(function (field) {\n      indexJson[field] = this.index[field].toJSON();\n    }, this);\n\n    return {\n      version: elasticlunr.version,\n      fields: this._fields,\n      ref: this._ref,\n      documentStore: this.documentStore.toJSON(),\n      index: indexJson,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Applies a plugin to the current index.\n   *\n   * A plugin is a function that is called with the index as its context.\n   * Plugins can be used to customise or extend the behaviour the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied to the index.\n   *\n   * The plugin function will be called with the index as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index as its context.\n   *\n   * Example:\n   *\n   *     var myPlugin = function (idx, arg1, arg2) {\n   *       // `this` is the index to be extended\n   *       // apply any extensions etc here.\n   *     }\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.use(myPlugin, 'arg1', 'arg2')\n   *     })\n   *\n   * @param {Function} plugin The plugin to apply.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.use = function (plugin) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    plugin.apply(this, args);\n  };\n  /*!\n   * elasticlunr.DocumentStore\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n   * documents stored in index.\n   *\n   * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n   *\n   * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n   * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n   * could not use JSON document to generate snippets of search results.\n   *\n   * @param {Boolean} save If the original JSON document should be stored.\n   * @constructor\n   * @module\n   */\n\n\n  elasticlunr.DocumentStore = function (save) {\n    if (save === null || save === undefined) {\n      this._save = true;\n    } else {\n      this._save = save;\n    }\n\n    this.docs = {};\n    this.docInfo = {};\n    this.length = 0;\n  };\n  /**\n   * Loads a previously serialised document store\n   *\n   * @param {Object} serialisedData The serialised document store to load.\n   * @return {elasticlunr.DocumentStore}\n   */\n\n\n  elasticlunr.DocumentStore.load = function (serialisedData) {\n    var store = new this();\n    store.length = serialisedData.length;\n    store.docs = serialisedData.docs;\n    store.docInfo = serialisedData.docInfo;\n    store._save = serialisedData.save;\n    return store;\n  };\n  /**\n   * check if current instance store the original doc\n   *\n   * @return {Boolean}\n   */\n\n\n  elasticlunr.DocumentStore.prototype.isDocStored = function () {\n    return this._save;\n  };\n  /**\n   * Stores the given doc in the document store against the given id.\n   * If docRef already exist, then update doc.\n   *\n   * Document is store by original JSON format, then you could use original document to generate search snippets.\n   *\n   * @param {Integer|String} docRef The key used to store the JSON format doc.\n   * @param {Object} doc The JSON format doc.\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n    if (!this.hasDoc(docRef)) this.length++;\n\n    if (this._save === true) {\n      this.docs[docRef] = clone(doc);\n    } else {\n      this.docs[docRef] = null;\n    }\n  };\n  /**\n   * Retrieves the JSON doc from the document store for a given key.\n   *\n   * If docRef not found, return null.\n   * If user set not storing the documents, return null.\n   *\n   * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n   * @return {Object}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n    if (this.hasDoc(docRef) === false) return null;\n    return this.docs[docRef];\n  };\n  /**\n   * Checks whether the document store contains a key (docRef).\n   *\n   * @param {Integer|String} docRef The id to look up in the document store.\n   * @return {Boolean}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n    return docRef in this.docs;\n  };\n  /**\n   * Removes the value for a key in the document store.\n   *\n   * @param {Integer|String} docRef The id to remove from the document store.\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n    if (!this.hasDoc(docRef)) return;\n    delete this.docs[docRef];\n    delete this.docInfo[docRef];\n    this.length--;\n  };\n  /**\n   * Add field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n    this.docInfo[docRef][fieldName] = length;\n  };\n  /**\n   * Update field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    this.addFieldLength(docRef, fieldName, length);\n  };\n  /**\n   * get field length of a document by docRef\n   *\n   * @param {Integer|String} docRef document id or reference\n   * @param {String} fieldName field name\n   * @return {Integer} field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n    if (docRef === null || docRef === undefined) return 0;\n    if (!(docRef in this.docs)) return 0;\n    if (!(fieldName in this.docInfo[docRef])) return 0;\n    return this.docInfo[docRef][fieldName];\n  };\n  /**\n   * Returns a JSON representation of the document store used for serialisation.\n   *\n   * @return {Object} JSON format\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.toJSON = function () {\n    return {\n      docs: this.docs,\n      docInfo: this.docInfo,\n      length: this.length,\n      save: this._save\n    };\n  };\n  /**\n   * Cloning object\n   *\n   * @param {Object} object in JSON format\n   * @return {Object} copied object\n   */\n\n\n  function clone(obj) {\n    if (null === obj || \"object\" !== typeof obj) return obj;\n    var copy = obj.constructor();\n\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n\n    return copy;\n  }\n  /*!\n   * elasticlunr.stemmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @module\n   * @param {String} str The string to stem\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n\n  elasticlunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return porterStemmer;\n  }();\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n  /*!\n   * elasticlunr.stopWordFilter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.stopWordFilter is an English language stop words filter, any words\n   * contained in the stop word list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.stopWordFilter = function (token) {\n    if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n      return token;\n    }\n  };\n  /**\n   * Remove predefined stop words\n   * if user want to use customized stop words, user could use this function to delete\n   * all predefined stopwords.\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.clearStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = {};\n  };\n  /**\n   * Add customized stop words\n   * user could use this function to add customized stop words\n   * \n   * @params {Array} words customized stop words\n   * @return {null}\n   */\n\n\n  elasticlunr.addStopWords = function (words) {\n    if (words == null || Array.isArray(words) === false) return;\n    words.forEach(function (word) {\n      elasticlunr.stopWordFilter.stopWords[word] = true;\n    }, this);\n  };\n  /**\n   * Reset to default stop words\n   * user could use this function to restore default stop words\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.resetStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  };\n\n  elasticlunr.defaultStopWords = {\n    \"\": true,\n    \"a\": true,\n    \"able\": true,\n    \"about\": true,\n    \"across\": true,\n    \"after\": true,\n    \"all\": true,\n    \"almost\": true,\n    \"also\": true,\n    \"am\": true,\n    \"among\": true,\n    \"an\": true,\n    \"and\": true,\n    \"any\": true,\n    \"are\": true,\n    \"as\": true,\n    \"at\": true,\n    \"be\": true,\n    \"because\": true,\n    \"been\": true,\n    \"but\": true,\n    \"by\": true,\n    \"can\": true,\n    \"cannot\": true,\n    \"could\": true,\n    \"dear\": true,\n    \"did\": true,\n    \"do\": true,\n    \"does\": true,\n    \"either\": true,\n    \"else\": true,\n    \"ever\": true,\n    \"every\": true,\n    \"for\": true,\n    \"from\": true,\n    \"get\": true,\n    \"got\": true,\n    \"had\": true,\n    \"has\": true,\n    \"have\": true,\n    \"he\": true,\n    \"her\": true,\n    \"hers\": true,\n    \"him\": true,\n    \"his\": true,\n    \"how\": true,\n    \"however\": true,\n    \"i\": true,\n    \"if\": true,\n    \"in\": true,\n    \"into\": true,\n    \"is\": true,\n    \"it\": true,\n    \"its\": true,\n    \"just\": true,\n    \"least\": true,\n    \"let\": true,\n    \"like\": true,\n    \"likely\": true,\n    \"may\": true,\n    \"me\": true,\n    \"might\": true,\n    \"most\": true,\n    \"must\": true,\n    \"my\": true,\n    \"neither\": true,\n    \"no\": true,\n    \"nor\": true,\n    \"not\": true,\n    \"of\": true,\n    \"off\": true,\n    \"often\": true,\n    \"on\": true,\n    \"only\": true,\n    \"or\": true,\n    \"other\": true,\n    \"our\": true,\n    \"own\": true,\n    \"rather\": true,\n    \"said\": true,\n    \"say\": true,\n    \"says\": true,\n    \"she\": true,\n    \"should\": true,\n    \"since\": true,\n    \"so\": true,\n    \"some\": true,\n    \"than\": true,\n    \"that\": true,\n    \"the\": true,\n    \"their\": true,\n    \"them\": true,\n    \"then\": true,\n    \"there\": true,\n    \"these\": true,\n    \"they\": true,\n    \"this\": true,\n    \"tis\": true,\n    \"to\": true,\n    \"too\": true,\n    \"twas\": true,\n    \"us\": true,\n    \"wants\": true,\n    \"was\": true,\n    \"we\": true,\n    \"were\": true,\n    \"what\": true,\n    \"when\": true,\n    \"where\": true,\n    \"which\": true,\n    \"while\": true,\n    \"who\": true,\n    \"whom\": true,\n    \"why\": true,\n    \"will\": true,\n    \"with\": true,\n    \"would\": true,\n    \"yet\": true,\n    \"you\": true,\n    \"your\": true\n  };\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * elasticlunr.trimmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.trimmer is a pipeline function for trimming non word\n   * characters from the begining and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.trimmer = function (token) {\n    if (token === null || token === undefined) {\n      throw new Error('token should not be undefined');\n    }\n\n    return token.replace(/^\\W+/, '').replace(/\\W+$/, '');\n  };\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n  /*!\n   * elasticlunr.InvertedIndex\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.InvertedIndex is used for efficiently storing and\n   * lookup of documents that contain a given token.\n   *\n   * @constructor\n   */\n\n  elasticlunr.InvertedIndex = function () {\n    this.root = {\n      docs: {},\n      df: 0\n    };\n  };\n  /**\n   * Loads a previously serialised inverted index.\n   *\n   * @param {Object} serialisedData The serialised inverted index to load.\n   * @return {elasticlunr.InvertedIndex}\n   */\n\n\n  elasticlunr.InvertedIndex.load = function (serialisedData) {\n    var idx = new this();\n    idx.root = serialisedData.root;\n    return idx;\n  };\n  /**\n   * Adds a {token: tokenInfo} pair to the inverted index.\n   * If the token already exist, then update the tokenInfo.\n   *\n   * tokenInfo format: { ref: 1, tf: 2}\n   * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n   * the document.\n   *\n   * By default this function starts at the root of the current inverted index, however\n   * it can start at any node of the inverted index if required.\n   *\n   * @param {String} token \n   * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n   * @param {Object} root An optional node at which to start looking for the\n   * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n   * is used.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n    var root = root || this.root,\n        idx = 0;\n\n    while (idx <= token.length - 1) {\n      var key = token[idx];\n      if (!(key in root)) root[key] = {\n        docs: {},\n        df: 0\n      };\n      idx += 1;\n      root = root[key];\n    }\n\n    var docRef = tokenInfo.ref;\n\n    if (!root.docs[docRef]) {\n      // if this doc not exist, then add this doc\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n      root.df += 1;\n    } else {\n      // if this doc already exist, then update tokenInfo\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n    }\n  };\n  /**\n   * Checks whether a token is in this elasticlunr.InvertedIndex.\n   * \n   *\n   * @param {String} token The token to be checked\n   * @return {Boolean}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n    if (!token) return false;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return false;\n      node = node[token[i]];\n    }\n\n    return true;\n  };\n  /**\n   * Retrieve a node from the inverted index for a given token.\n   * If token not found in this InvertedIndex, return null.\n   * \n   *\n   * @param {String} token The token to get the node for.\n   * @return {Object}\n   * @see InvertedIndex.prototype.get\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getNode = function (token) {\n    if (!token) return null;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return null;\n      node = node[token[i]];\n    }\n\n    return node;\n  };\n  /**\n   * Retrieve the documents of a given token.\n   * If token not found, return {}.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return {};\n    }\n\n    return node.docs;\n  };\n  /**\n   * Retrieve term frequency of given token in given docRef.\n   * If token or docRef not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @param {String|Integer} docRef\n   * @return {Integer}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    if (!(docRef in node.docs)) {\n      return 0;\n    }\n\n    return node.docs[docRef].tf;\n  };\n  /**\n   * Retrieve the document frequency of given token.\n   * If token not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    return node.df;\n  };\n  /**\n   * Remove the document identified by document's ref from the token in the inverted index.\n   *\n   *\n   * @param {String} token Remove the document from which token.\n   * @param {String} ref The ref of the document to remove from given token.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n    if (!token) return;\n    var node = this.getNode(token);\n    if (node == null) return;\n\n    if (ref in node.docs) {\n      delete node.docs[ref];\n      node.df -= 1;\n    }\n  };\n  /**\n   * Find all the possible suffixes of given token using tokens currently in the inverted index.\n   * If token not found, return empty Array.\n   *\n   * @param {String} token The token to expand.\n   * @return {Array}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n    if (token == null || token == '') return [];\n    var memo = memo || [];\n\n    if (root == void 0) {\n      root = this.getNode(token);\n      if (root == null) return memo;\n    }\n\n    if (root.df > 0) memo.push(token);\n\n    for (var key in root) {\n      if (key === 'docs') continue;\n      if (key === 'df') continue;\n      this.expandToken(token + key, memo, root[key]);\n    }\n\n    return memo;\n  };\n  /**\n   * Returns a representation of the inverted index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.toJSON = function () {\n    return {\n      root: this.root\n    };\n  };\n  /*!\n   * elasticlunr.Configuration\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /** \n   * elasticlunr.Configuration is used to analyze the user search configuration.\n   * \n   * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n   * \n   * Currently configuration supports:\n   * 1. query-time boosting, user could set how to boost each field.\n   * 2. boolean model chosing, user could choose which boolean model to use for each field.\n   * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n   * \n   * Query time boosting must be configured by field category, \"boolean\" model could be configured \n   * by both field category or globally as the following example. Field configuration for \"boolean\"\n   * will overwrite global configuration.\n   * Token expand could be configured both by field category or golbally. Local field configuration will\n   * overwrite global configuration.\n   * \n   * configuration example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"bool\" field configuation overwrite global configuation example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"expand\" example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\",\n   *   expand: true\n   * }\n   * \n   * \"expand\" example for field category:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\", expand: true},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * setting the boost to 0 ignores the field (this will only search the title):\n   * {\n   *   fields:{\n   *     title: {boost: 1},\n   *     body: {boost: 0}\n   *   }\n   * }\n   *\n   * then, user could search with configuration to do query-time boosting.\n   * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   * \n   * \n   * @constructor\n   * \n   * @param {String} config user configuration\n   * @param {Array} fields fields of index instance\n   * @module\n   */\n\n\n  elasticlunr.Configuration = function (config, fields) {\n    var config = config || '';\n\n    if (fields == undefined || fields == null) {\n      throw new Error('fields should not be null');\n    }\n\n    this.config = {};\n    var userConfig;\n\n    try {\n      userConfig = JSON.parse(config);\n      this.buildUserConfig(userConfig, fields);\n    } catch (error) {\n      elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n      this.buildDefaultConfig(fields);\n    }\n  };\n  /**\n   * Build default search configuration.\n   * \n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n    this.reset();\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: \"OR\",\n        expand: false\n      };\n    }, this);\n  };\n  /**\n   * Build user configuration.\n   * \n   * @param {JSON} config User JSON configuratoin\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n    var global_bool = \"OR\";\n    var global_expand = false;\n    this.reset();\n\n    if ('bool' in config) {\n      global_bool = config['bool'] || global_bool;\n    }\n\n    if ('expand' in config) {\n      global_expand = config['expand'] || global_expand;\n    }\n\n    if ('fields' in config) {\n      for (var field in config['fields']) {\n        if (fields.indexOf(field) > -1) {\n          var field_config = config['fields'][field];\n          var field_expand = global_expand;\n\n          if (field_config.expand != undefined) {\n            field_expand = field_config.expand;\n          }\n\n          this.config[field] = {\n            boost: field_config.boost || field_config.boost === 0 ? field_config.boost : 1,\n            bool: field_config.bool || global_bool,\n            expand: field_expand\n          };\n        } else {\n          elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n        }\n      }\n    } else {\n      this.addAllFields2UserConfig(global_bool, global_expand, fields);\n    }\n  };\n  /**\n   * Add all fields to user search configuration.\n   * \n   * @param {String} bool Boolean model\n   * @param {String} expand Expand model\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: bool,\n        expand: expand\n      };\n    }, this);\n  };\n  /**\n   * get current user configuration\n   */\n\n\n  elasticlunr.Configuration.prototype.get = function () {\n    return this.config;\n  };\n  /**\n   * reset user search configuration.\n   */\n\n\n  elasticlunr.Configuration.prototype.reset = function () {\n    this.config = {};\n  };\n  /**\n   * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n   * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n   * much bigger that not good for browser usage.\n   *\n   */\n\n  /*!\n   * lunr.SortedSet\n   * Copyright (C) 2016 Oliver Nightingale\n   */\n\n  /**\n   * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n   * order.\n   *\n   * @constructor\n   */\n\n\n  lunr.SortedSet = function () {\n    this.length = 0;\n    this.elements = [];\n  };\n  /**\n   * Loads a previously serialised sorted set.\n   *\n   * @param {Array} serialisedData The serialised set to load.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.load = function (serialisedData) {\n    var set = new this();\n    set.elements = serialisedData;\n    set.length = serialisedData.length;\n    return set;\n  };\n  /**\n   * Inserts new items into the set in the correct position to maintain the\n   * order.\n   *\n   * @param {Object} The objects to add to this set.\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.add = function () {\n    var i, element;\n\n    for (i = 0; i < arguments.length; i++) {\n      element = arguments[i];\n      if (~this.indexOf(element)) continue;\n      this.elements.splice(this.locationFor(element), 0, element);\n    }\n\n    this.length = this.elements.length;\n  };\n  /**\n   * Converts this sorted set into an array.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toArray = function () {\n    return this.elements.slice();\n  };\n  /**\n   * Creates a new array with the results of calling a provided function on every\n   * element in this sorted set.\n   *\n   * Delegates to Array.prototype.map and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * for the function fn.\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.map = function (fn, ctx) {\n    return this.elements.map(fn, ctx);\n  };\n  /**\n   * Executes a provided function once per sorted set element.\n   *\n   * Delegates to Array.prototype.forEach and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * @memberOf SortedSet\n   * for the function fn.\n   */\n\n\n  lunr.SortedSet.prototype.forEach = function (fn, ctx) {\n    return this.elements.forEach(fn, ctx);\n  };\n  /**\n   * Returns the index at which a given element can be found in the\n   * sorted set, or -1 if it is not present.\n   *\n   * @param {Object} elem The object to locate in the sorted set.\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.indexOf = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem === elem) return pivot;\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem === elem) return pivot;\n    return -1;\n  };\n  /**\n   * Returns the position within the sorted set that an element should be\n   * inserted at to maintain the current order of the set.\n   *\n   * This function assumes that the element to search for does not already exist\n   * in the sorted set.\n   *\n   * @param {Object} elem The elem to find the position for in the set\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.locationFor = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem > elem) return pivot;\n    if (pivotElem < elem) return pivot + 1;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the intersection\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.intersect = function (otherSet) {\n    var intersectSet = new lunr.SortedSet(),\n        i = 0,\n        j = 0,\n        a_len = this.length,\n        b_len = otherSet.length,\n        a = this.elements,\n        b = otherSet.elements;\n\n    while (true) {\n      if (i > a_len - 1 || j > b_len - 1) break;\n\n      if (a[i] === b[j]) {\n        intersectSet.add(a[i]);\n        i++, j++;\n        continue;\n      }\n\n      if (a[i] < b[j]) {\n        i++;\n        continue;\n      }\n\n      if (a[i] > b[j]) {\n        j++;\n        continue;\n      }\n    }\n\n    ;\n    return intersectSet;\n  };\n  /**\n   * Makes a copy of this set\n   *\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.clone = function () {\n    var clone = new lunr.SortedSet();\n    clone.elements = this.toArray();\n    clone.length = clone.elements.length;\n    return clone;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the union\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to union with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.union = function (otherSet) {\n    var longSet, shortSet, unionSet;\n\n    if (this.length >= otherSet.length) {\n      longSet = this, shortSet = otherSet;\n    } else {\n      longSet = otherSet, shortSet = this;\n    }\n\n    unionSet = longSet.clone();\n\n    for (var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++) {\n      unionSet.add(shortSetElements[i]);\n    }\n\n    return unionSet;\n  };\n  /**\n   * Returns a representation of the sorted set ready for serialisation.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toJSON = function () {\n    return this.toArray();\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr;\n  });\n})();","'use strict';\n\nvar _slicedToArray = require(\"/home/travis/build/icatproject/icatproject.github.io/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/travis/build/icatproject/icatproject.github.io/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n};\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key) {\n        return function (result, value) {\n          if (value === null || value === undefined || value.length === 0) {\n            return result;\n          }\n\n          if (result.length === 0) {\n            return [[encode(key, options), '=', encode(value, options)].join('')];\n          }\n\n          return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n        };\n      };\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n        var newValue = isArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        }) : value === null ? value : decode(value, options);\n        accumulator[key] = newValue;\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nfunction parse(input, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  var _iterator = _createForOfIteratorHelper(input.split('&')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var param = _step.value;\n\n      var _splitOnFirst = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          _key = _splitOnFirst2[0],\n          _value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      _value = _value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? _value : decode(_value, options);\n      formatter(decode(_key, options), _value, ret);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = ret[key];\n\n    if (typeof value === 'object' && value !== null) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        value[k] = parseValue(value[k], options);\n      }\n    } else {\n      ret[key] = parseValue(value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {\n    var key = _Object$keys3[_i3];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = object[key];\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (input, options) {\n  options = Object.assign({\n    decode: true\n  }, options);\n\n  var _splitOnFirst3 = splitOnFirst(input, '#'),\n      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),\n      url = _splitOnFirst4[0],\n      hash = _splitOnFirst4[1];\n\n  return Object.assign({\n    url: url.split('?')[0] || '',\n    query: parse(extract(input), options)\n  }, options && options.parseFragmentIdentifier && hash ? {\n    fragmentIdentifier: decode(hash, options)\n  } : {});\n};\n\nexports.stringifyUrl = function (input, options) {\n  options = Object.assign({\n    encode: true,\n    strict: true\n  }, options);\n  var url = removeHash(input.url).split('?')[0] || '';\n  var queryFromUrl = exports.extract(input.url);\n  var parsedQueryFromUrl = exports.parse(queryFromUrl, {\n    sort: false\n  });\n  var query = Object.assign(parsedQueryFromUrl, input.query);\n  var queryString = exports.stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  var hash = getHash(input.url);\n\n  if (input.fragmentIdentifier) {\n    hash = \"#\".concat(encode(input.fragmentIdentifier, options));\n  }\n\n  return \"\".concat(url).concat(queryString).concat(hash);\n};","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;"],"sourceRoot":""}