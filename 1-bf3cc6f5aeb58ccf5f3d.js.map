{"version":3,"sources":["webpack:///./src/components/dropdown.js","webpack:///./src/components/navbar.js","webpack:///./src/components/searchbar.js","webpack:///./src/components/header.js","webpack:///./src/components/recentMeetings.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js"],"names":["Dropdown","props","_this","_React$Component","call","this","state","expanded","handleBlur","bind","assertThisInitialized_default","handleFocus","setState","render","_this2","Object","core_browser_esm","onMouseEnter","onMouseLeave","css","dropdown_ref3","gatsby_browser_entry","to","directoryNode","name","onFocus","onBlur","_ref4","replace","dropdown_ref5","data","allMarkdownRemark","edges","map","_ref6","node","shouldRender","key","id","dropdown_ref","fields","slug","_ref2","frontmatter","title","renderListItem","fileAbsolutePath","includes","split","pop","search","RegExp","React","Component","dropdown","_ref7","query","dropdown_Dropdown","_3658932624","Navbar","navbar_ref","navbar_ref2","navbar_ref3","allDirectory","_ref5","navbar_ref4","navbar","navbar_Navbar","_2270474749","Searchbar","event","target","value","navigate","handleKeyPress","className","type","defaultValue","onKeyPress","placeholder","e","Header","searchVisible","toggleSearch","preventDefault","header_ref","style","margin","header_ref2","siteTitle","header_ref3","header_ref4","href","onClick","index_es","icon","header_ref5","searchbar_Searchbar","propTypes","PropTypes","string","defaultProps","RecentMeetings","ulStyle","_ref","liStyle","linkStyle","_789609738","styles","Sidebar","sidebar_ref","recentMeetings","library","add","faSearch","faBars","Layout","_ref3","children","react_default","a","Fragment","header","site","siteMetadata","layout_ref","sidebar_Sidebar","layout_ref2","_755544856","isRequired"],"mappings":"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","file":"1-bf3cc6f5aeb58ccf5f3d.js","sourcesContent":["import { StaticQuery, graphql, Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\n\r\nfunction renderListItem(node, shouldRender) {\r\n  if (shouldRender) {\r\n    return (\r\n      <li\r\n        key={node.id}\r\n        css={css`\r\n          @media (min-width: 600px) {\r\n            &:hover {\r\n              background-color: #41a62a;\r\n            }\r\n            line-height: 12px;\r\n          }\r\n          line-height: 6px;\r\n        `}\r\n      >\r\n        <Link\r\n          to={node.fields.slug}\r\n          css={css`\r\n            color: white;\r\n            text-decoration: none;\r\n            display: block;\r\n            padding: 12px 0.5rem;\r\n            font-size: 11px;\r\n            text-transform: uppercase;\r\n            @media (max-width: 600px) {\r\n              padding: 0.5rem 2rem;\r\n              text-align: left;\r\n              &:hover {\r\n                color: #24890d;\r\n              }\r\n            }\r\n          `}\r\n        >\r\n          {node.frontmatter.title}\r\n        </Link>\r\n      </li>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nclass Dropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: false\r\n    };\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n  }\r\n\r\n  handleBlur() {\r\n    this.setState({ expanded: false });\r\n  }\r\n\r\n  handleFocus() {\r\n    this.setState({ expanded: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li\r\n        onMouseEnter={this.handleFocus}\r\n        onMouseLeave={this.handleBlur}\r\n        css={css`\r\n          float: left;\r\n          background-color: black;\r\n          @media (min-width: 600px) {\r\n            &:hover {\r\n              background-color: #24890d;\r\n            }\r\n            &:hover ul {\r\n              display: block;\r\n            }\r\n            margin-right: 1px;\r\n            line-height: 2.5rem;\r\n          }\r\n          @media (max-width: 600px) {\r\n            text-align: left;\r\n            width: 100%;\r\n            margin: 0;\r\n            line-height: 1rem;\r\n          }\r\n        `}\r\n      >\r\n        <Link\r\n          to={this.props.directoryNode.name}\r\n          onFocus={this.handleFocus}\r\n          onBlur={this.handleBlur}\r\n          css={css`\r\n            text-decoration: none;\r\n            display: block;\r\n            color: white;\r\n            padding: 0 0.5rem;\r\n            text-transform: uppercase;\r\n            font-size: 11px;\r\n            &:focus + ul {\r\n              display: block;\r\n            }\r\n            @media (max-width: 600px) {\r\n              &:hover {\r\n                color: #24890d;\r\n              }\r\n            }\r\n          `}\r\n        >\r\n          {this.props.directoryNode.name.replace(\"-\", \" \")}\r\n        </Link>\r\n        <ul\r\n          css={css`\r\n            width: 176px;\r\n            list-style: none;\r\n            padding: 0;\r\n            margin: 0;\r\n            background-color: #24890d;\r\n            position: absolute;\r\n            display: none;\r\n            @media (max-width: 600px) {\r\n              background-color: black;\r\n              position: static;\r\n              display: block;\r\n              text-align: center;\r\n              width: 100%;\r\n              padding: 10px 0;\r\n              margin: 0;\r\n              line-height: 1rem;\r\n            }\r\n          `}\r\n        >\r\n          {this.props.data.allMarkdownRemark.edges.map(({ node }) =>\r\n            renderListItem(\r\n              node,\r\n              //we don't want index.md files as dropdown list items\r\n              //we also only want files that are direct children of the directory\r\n              //or are index.md files of sub directories\r\n              !node.fileAbsolutePath.includes(\r\n                this.props.directoryNode.name + \"/index.md\"\r\n              ) &&\r\n                (node.fileAbsolutePath.includes(\r\n                  this.props.directoryNode.name +\r\n                    \"/\" +\r\n                    node.fileAbsolutePath.split(\"/\").pop()\r\n                ) ||\r\n                  node.fileAbsolutePath.search(\r\n                    new RegExp(\r\n                      \"/\" + this.props.directoryNode.name + \"/[^/]+/index.md\"\r\n                    )\r\n                  ) !== -1)\r\n            )\r\n          )}\r\n        </ul>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ({ directoryNode }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___title] }) {\r\n          edges {\r\n            node {\r\n              id\r\n              frontmatter {\r\n                title\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n              fileAbsolutePath\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Dropdown directoryNode={directoryNode} data={data} />}\r\n  />\r\n);\r\n","import { StaticQuery, graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport Dropdown from \"./dropdown\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav\r\n        css={css`\r\n          float: right;\r\n          margin: 0;\r\n          height: inherit;\r\n          @media (max-width: 600px) {\r\n            &:hover ul {\r\n              display: block;\r\n            }\r\n          }\r\n        `}\r\n      >\r\n        <button\r\n          css={css`\r\n            display: none;\r\n            width: 40px;\r\n            height: 40px;\r\n            @media (max-width: 600px) {\r\n              display: inline-block;\r\n            }\r\n          `}\r\n        >\r\n          🍔\r\n        </button>\r\n        <ul\r\n          css={css`\r\n            padding: 0 0;\r\n            list-style: none;\r\n            display: inline;\r\n            @media (max-width: 600px) {\r\n              display: none;\r\n              position: absolute;\r\n              padding: 1px;\r\n              background: #000;\r\n              right: 0px;\r\n              top: 1.5rem;\r\n              width: 100%;\r\n            }\r\n          `}\r\n        >\r\n          {this.props.data.allDirectory.edges.map(({ node }) => (\r\n            <Dropdown directoryNode={node} key={node.id} />\r\n          ))}\r\n          <li\r\n            css={css`\r\n              float: left;\r\n              margin-right: 1px;\r\n              background-color: black;\r\n              &:hover {\r\n                background-color: #24890d;\r\n              }\r\n              line-height: 2.5rem;\r\n              @media (max-width: 600px) {\r\n                text-align: center;\r\n                width: 100%;\r\n                padding: 10px 0;\r\n                margin: 0;\r\n              }\r\n            `}\r\n          />\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allDirectory(\r\n          filter: {\r\n            sourceInstanceName: { eq: \"content\" }\r\n            relativePath: { regex: \"/^[^/]+$/\" }\r\n            name: { regex: \"/^[^/_]/\" }\r\n          }\r\n          sort: { order: ASC, fields: [name] }\r\n        ) {\r\n          edges {\r\n            node {\r\n              id\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Navbar data={data} />}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nexport default class Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\"\r\n    };\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label>\r\n        <span className=\"screen-reader-text\">Search: </span>\r\n        <input\r\n          title=\"Search\"\r\n          type=\"text\"\r\n          defaultValue={this.state.query}\r\n          onKeyPress={this.handleKeyPress}\r\n          placeholder=\"Search...\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.search(e);\r\n    }\r\n  }\r\n\r\n  search = event => {\r\n    const query = event.target.value;\r\n    this.setState({ query: query });\r\n    navigate(\"/search?query=\" + query);\r\n  };\r\n}\r\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { css } from \"@emotion/core\";\nimport Navbar from \"./navbar\";\nimport Searchbar from \"./searchbar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchVisible: false\n    };\n    this.toggleSearch = this.toggleSearch.bind(this);\n  }\n\n  toggleSearch(e) {\n    e.preventDefault();\n    this.setState({\n      searchVisible: !this.state.searchVisible\n    });\n  }\n\n  render() {\n    return (\n      <header\n        css={css`\n          background: black;\n          display: inline-block;\n          width: 100%;\n          position: fixed;\n          z-index: 5;\n          height: 2.5rem;\n          @media only screen and (max-width: 600px) {\n            position: absolute;\n          }\n        `}\n      >\n        <h1 style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            css={css`\n              margin: 0 1rem;\n              color: white;\n              float: left;\n              text-decoration: none;\n            `}\n          >\n            {this.props.siteTitle}\n          </Link>\n        </h1>\n        <div\n          css={css`\n            background-color: #24890d;\n            display: inline;\n            margin-right: 4.5rem;\n            float: right;\n            height: inherit;\n            padding: 0 0.5rem;\n            &:hover {\n              background-color: #41a62a;\n            }\n            @media only screen and (max-width: 600px) {\n              margin-right: 0;\n            }\n          `}\n        >\n          <a\n            css={css`\n              display: inline-block;\n              width: 100%;\n              height: 100%;\n              text-decoration: none;\n              line-height: 2rem;\n            `}\n            href=\"#search-toggle\"\n            onClick={this.toggleSearch}\n          >\n            <FontAwesomeIcon icon=\"search\" />\n          </a>\n        </div>\n        <Navbar />\n\n        {this.state.searchVisible ? (\n          <div\n            css={css`\n              position: absolute;\n              top: 2.5em;\n              left: 185px;\n              right: 0;\n              background-color: #41a62a;\n              @media only screen and (max-width: 600px) {\n                left: 0;\n              }\n            `}\n          >\n            <div\n              css={css`\n                float: right;\n                padding: 0.5rem 3rem;\n              `}\n            >\n              <Searchbar />\n            </div>\n          </div>\n        ) : null}\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import { StaticQuery, graphql, Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport { linkStyle, liStyle, ulStyle } from \"./sidebar\";\r\n\r\nconst RecentMeetings = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allMarkdownRemark(\r\n          sort: { order: DESC, fields: [frontmatter___date] }\r\n          filter: {\r\n            fileAbsolutePath: {\r\n              regex: \"/(collaboration)/(communication)/(monthly-meetings)/((?!index).)*[.]md$/\"\r\n            }\r\n          }\r\n          limit: 5\r\n        ) {\r\n          edges {\r\n            node {\r\n              id\r\n              frontmatter {\r\n                title\r\n                date(formatString: \"Do MMMM YYYY\")\r\n              }\r\n              fields {\r\n                slug\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div>\r\n        <h5>Recent Meetings</h5>\r\n        <ul\r\n          css={css`\r\n            ${ulStyle}\r\n          `}\r\n        >\r\n          {data.allMarkdownRemark.edges.map(({ node }) => (\r\n            <li\r\n              key={node.id}\r\n              css={css`\r\n                ${liStyle}\r\n              `}\r\n            >\r\n              <Link\r\n                css={css`\r\n                  ${linkStyle}\r\n                `}\r\n                to={node.fields.slug}\r\n              >\r\n                {node.frontmatter.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default RecentMeetings;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { css } from \"@emotion/core\";\r\nimport RecentMeetings from \"./recentMeetings\";\r\nimport Searchbar from \"./searchbar\";\r\n\r\nexport const linkStyle = css`\r\n  text-decoration: none;\r\n  color: white;\r\n  &:hover {\r\n    color: green;\r\n  }\r\n`;\r\n\r\nexport const liStyle = css`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const ulStyle = css`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 11px;\r\n`;\r\n\r\nexport const Sidebar = () => (\r\n  <div\r\n    css={css`\r\n      background-color: black;\r\n      color: white;\r\n      width: 175px;\r\n      float: left;\r\n      margin-top: 2rem;\r\n      margin-bottom: -100%;\r\n      min-height: 100vh;\r\n      position: fixed;\r\n      z-index: 3;\r\n      padding-left: 10px;\r\n      @media only screen and (max-width: 600px) {\r\n        display: none;\r\n      }\r\n    `}\r\n  >\r\n    <h5>Search</h5>\r\n    <Searchbar />\r\n    <RecentMeetings />\r\n    <h5>Links</h5>\r\n    <ul\r\n      css={css`\r\n        ${ulStyle}\r\n      `}\r\n    >\r\n      <li\r\n        css={css`\r\n          ${liStyle}\r\n        `}\r\n      >\r\n        <a\r\n          css={css`\r\n            ${linkStyle}\r\n          `}\r\n          href=\"http://groups.google.com/group/icatgroup\"\r\n        >\r\n          icatgroup\r\n        </a>\r\n      </li>\r\n      <li\r\n        css={css`\r\n          ${liStyle}\r\n        `}\r\n      >\r\n        <a\r\n          css={css`\r\n            ${linkStyle}\r\n          `}\r\n          href=\"https://repo.icatproject.org/\"\r\n        >\r\n          repo.icatproject.org\r\n        </a>\r\n      </li>\r\n      <li\r\n        css={css`\r\n          ${liStyle}\r\n        `}\r\n      >\r\n        <Link\r\n          to=\"/useful-links\"\r\n          css={css`\r\n            ${linkStyle}\r\n          `}\r\n        >\r\n          Useful Links\r\n        </Link>\r\n      </li>\r\n      <li\r\n        css={css`\r\n          ${liStyle}\r\n        `}\r\n      >\r\n        <a\r\n          css={css`\r\n            ${linkStyle}\r\n          `}\r\n          href=\"https://waffle.io/icatproject/icat.server\"\r\n        >\r\n          Waffle.io dashboard\r\n        </a>\r\n      </li>\r\n      <li\r\n        css={css`\r\n          ${liStyle}\r\n        `}\r\n      >\r\n        <a\r\n          css={css`\r\n            ${linkStyle}\r\n          `}\r\n          href=\"https://github.com/icatproject\"\r\n        >\r\n          Github for icatproject\r\n        </a>\r\n      </li>\r\n      <li\r\n        css={css`\r\n          ${liStyle}\r\n        `}\r\n      >\r\n        <a\r\n          css={css`\r\n            ${linkStyle}\r\n          `}\r\n          href=\"https://github.com/icatproject-contrib\"\r\n        >\r\n          Github for icatproject-contrib\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { css } from \"@emotion/core\";\nimport Header from \"./header\";\nimport { Sidebar } from \"./sidebar\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSearch, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./layout.css\";\n\nlibrary.add(faSearch);\nlibrary.add(faBars);\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          css={css`\n            margin: 0;\n          `}\n        >\n          <Sidebar />\n          <div\n            css={css`\n              margin-top: 70px;\n              margin-left: 300px;\n              margin-bottom: 1.5em;\n              margin-right: 100px;\n              float: left;\n              @media only screen and (max-width: 600px) {\n                margin-right: 10px;\n                margin-left: 10px;\n              }\n            `}\n          >\n            {children}\n          </div>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}